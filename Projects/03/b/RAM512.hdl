// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = load, sel[0..2] = address[6..8],
			a = oa, b = ob, c = oc, d = od,
            e = oe, f = of, g = og, h = oh);
	RAM64(in = in, load = oa, address = address[0..5], out = out0);
	RAM64(in = in, load = ob, address = address[0..5], out = out1);
	RAM64(in = in, load = oc, address = address[0..5], out = out2);
	RAM64(in = in, load = od, address = address[0..5], out = out3);
	RAM64(in = in, load = oe, address = address[0..5], out = out4);
	RAM64(in = in, load = of, address = address[0..5], out = out5);
	RAM64(in = in, load = og, address = address[0..5], out = out6);
	RAM64(in = in, load = oh, address = address[0..5], out = out7);
	
	Mux8Way16 (a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7,sel = address[6..8], out = out);
}